class Fetch extends Component {
  constructor(props) {
    super(props);

    this.state = {
      data: null,
      error: null,
      loading: false
    };
  }

  componentDidMount() {
    const {
      method,
      url,
      body
    } = this.props;
    this.setState(
      { loading: true },
      () => {
        window
          .fetch(url, {
            body,
            headers: {
              Accept: "application/json"
            },
            method,
            mode: "cors"
          })
          .then(res => res.json())
          .then(data => {
            this.setState({
              data,
              loading: false
            });
          })
          .catch(error => {
            this.setState({
              error,
              loading: false
            });
          });
      }
    );
  }

  render() {
    const {
      error,
      loading
    } = this.state;
    if (
      typeof this.props.children ===
      "function"
    ) {
      return this.props.children(
        this.state
      );
    }
    if (error) {
      return (
        <div>
          {error.message ||
            "Unknown error ðŸ˜­"}
        </div>
      );
    }
    if (loading) {
      return <div>Loading...</div>;
    }
    return React.cloneElement(
      this.props.children,
      this.state
    );
  }
}

render(
  <Fetch
    body={null}
    method="GET"
    url="https://jsonplaceholder.typicode.com/todos"
  >
    {({ data, error, loading }) => {
      if (data) {
        return data.length;
      }
      return null;
    }}
  </Fetch>
);
