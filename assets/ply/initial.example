class FogtownFetch extends Component {
  constructor(props) {
    super(props);

    this.state = {
      data: null,
      error: null,
      loading: false
    };
  }

  componentDidMount() {
    const {
      database,
      table
    } = this.props;
    const url = `http://localhost:5000/?table=${table}`;
    this.setState(
      { loading: true },
      () => {
        window
          .fetch(url, {
            headers: {
              Accept:
                "application/json",
              query: JSON.stringify({
                limit: null
              })
            },
            mode: "cors"
          })
          .then(res => res.json())
          .then(data => {
            this.setState({
              data,
              loading: false
            });
          })
          .catch(error => {
            this.setState({
              error,
              loading: false
            });
          });
      }
    );
  }

  render() {
    const {
      error,
      loading
    } = this.state;
    if (error) {
      return (
        <div>
          {error.message ||
            "Unknown error ðŸ˜­"}
        </div>
      );
    }
    if (loading) {
      return <div>Loading...</div>;
    }
    return React.cloneElement(
      this.props.children,
      this.state
    );
  }
}

const Data = ({ data }) =>
  data ? (
    <div>
      <h1>rows: {data.length}</h1>
      <h2>first five...</h2>
      <ul>
        {data
          .slice(0, 5)
          .map((d, i) => {
            return (
              <li key={i}>{`${
                d.name
              }: ${d.total_votes}`}</li>
            );
          })}
      </ul>
    </div>
  ) : null;

render(
  <FogtownFetch
    database="jebeck"
    table="la_croix_survey"
  >
    <Data />
  </FogtownFetch>
);
