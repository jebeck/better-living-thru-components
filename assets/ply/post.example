class Fetch extends Component {
  constructor(props) {
    super(props);

    this.state = {
      data: null,
      error: null,
      loading: false
    };
  }

  componentDidMount() {
    const { method, url, body } = this.props;
    this.setState({ loading: true }, () => {
      window
        .fetch(url, {
          body,
          headers: {
            Accept: "application/json"
          },
          method,
          mode: "cors"
        })
        .then(res => res.json())
        .then(data => {
          this.setState({ data, loading: false });
        })
        .catch(error => {
          this.setState({
            error,
            loading: false
          });
        });
    });
  }

  render() {
    const { error, loading } = this.state;
    if (error) {
      return (
        <div>
          {error.message || "Unknown error ðŸ˜­"}
        </div>
      );
    }
    if (loading) {
      return <div>Loading...</div>;
    }
    return React.cloneElement(
      this.props.children,
      this.state
    );
  }
}

const Resp = ({ data }) =>
  data ? (
    <div>
      <h1>POST response:</h1>
      <div>{JSON.stringify(data)}</div>
    </div>
  ) : null;

render(
  <Fetch
    body={JSON.stringify({ title: "say hi ðŸ‘‹" })}
    method="POST"
    url="https://jsonplaceholder.typicode.com/posts"
  >
    <Resp />
  </Fetch>
);
